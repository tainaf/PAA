package entidade;
// Generated 24/08/2017 20:31:33 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pedido generated by hbm2java
 */
@Entity
@Table(name="pedido"
    ,schema="public"
)
public class Pedido  implements java.io.Serializable {


     private int idpedido;
     private Pessoa pessoa;
     private Date data;
     private boolean situacao;
     private Set produtoses = new HashSet(0);
     private Set usuarios = new HashSet(0);
     private Set cargas = new HashSet(0);

    public Pedido() {
    }

	
    public Pedido(int idpedido, Pessoa pessoa, Date data, boolean situacao) {
        this.idpedido = idpedido;
        this.pessoa = pessoa;
        this.data = data;
        this.situacao = situacao;
    }
    public Pedido(int idpedido, Pessoa pessoa, Date data, boolean situacao, Set produtoses, Set usuarios, Set cargas) {
       this.idpedido = idpedido;
       this.pessoa = pessoa;
       this.data = data;
       this.situacao = situacao;
       this.produtoses = produtoses;
       this.usuarios = usuarios;
       this.cargas = cargas;
    }
   
     @Id 

    
    @Column(name="idpedido", unique=true, nullable=false)
    public int getIdpedido() {
        return this.idpedido;
    }
    
    public void setIdpedido(int idpedido) {
        this.idpedido = idpedido;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idpessoa", nullable=false)
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="data", nullable=false, length=13)
    public Date getData() {
        return this.data;
    }
    
    public void setData(Date data) {
        this.data = data;
    }

    
    @Column(name="situacao", nullable=false)
    public boolean isSituacao() {
        return this.situacao;
    }
    
    public void setSituacao(boolean situacao) {
        this.situacao = situacao;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="pedido_produtos", schema="public", joinColumns = { 
        @JoinColumn(name="idpedido", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idprodutos", nullable=false, updatable=false) })
    public Set getProdutoses() {
        return this.produtoses;
    }
    
    public void setProdutoses(Set produtoses) {
        this.produtoses = produtoses;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="pedidos")
    public Set getUsuarios() {
        return this.usuarios;
    }
    
    public void setUsuarios(Set usuarios) {
        this.usuarios = usuarios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pedido")
    public Set getCargas() {
        return this.cargas;
    }
    
    public void setCargas(Set cargas) {
        this.cargas = cargas;
    }




}


